---
// const tags = ["#ツール", "#娯楽", "#情報", "#Webアプリ", "#拡張機能"]
// anyは後で直す
// const {tags} = Astro.props
import {client} from "../library/microcms"
const tags = await client.get({
 endpoint: 'tag' //記事APIのエンドポイント
//  queries: { filters: 'creators[equals]90cm8jj2mkl'}
});
---
<div class="tag-wrapper">
	<!-- タグは後で切り出す -->
	{
		tags.contents.map((tag: any) => (
			<div class="tag">
				<a href={`${tag.id}`}>
					{/* tag.nameも一緒に送りたい */}
					#{tag.name}
				</a>
			</div>
		))
	}
	<!-- <div class="tag"><a href="#">#テスト</a></div>
	<div class="tag"><a href="#">#テスト</a></div>
	<div class="tag"><a href="#">#テスト</a></div>
	<div class="tag"><a href="#">#テスト</a></div>
	<div class="tag"><a href="#">#テスト</a></div>
	<div class="tag"><a href="#">#テスト</a></div>
	<div class="tag"><a href="#">#テスト</a></div>
	<div class="tag"><a href="#">#テスト</a></div> -->
</div>

<style>
	.tag-wrapper {
		/* display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: center; */
		padding: 15px 0;
		/* overflow-y: scroll; */
		overflow-x: auto;
		white-space: nowrap;
	}

	.tag {
		background-color: #D9D9D9;
		margin: 10px 20px;
		padding: 3px;
		/* box-shadowの値を使いまわしたい */
		box-shadow: 1px 1px 2px #8b8b8b;
		display: inline;
	}

	.tag:active {
		box-shadow: 1px 1px 2px #8b8b8b inset;
	}

	.tag > a {
		color: black;
		text-decoration: none;
	}
</style>